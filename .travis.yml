os: linux
dist: bionic
language: cpp

addons:
  apt:
    sources:
      - sourceline: "ppa:ubuntu-toolchain-r/test"
      - sourceline: 'deb https://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'
        key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
    packages:
      - g++-9
      - clang-9
      - llvm-9-dev
      - make
      - openjdk-8-jdk # required for ANTLR4
      - uuid-dev
      - libserd-dev
      - python3-pip # used for installing conan
      - python3-setuptools # required for installing conan
      - python3-wheel
      - zip

install:
  - export CXX="clang++-9" CC="clang-9"
#  - export PATH=/usr/bin:$PATH
  - pip3 install --user conan
  - pip3 install --user cmake==3.13.3
  - cmake --version
  - conan --version

cache:
  directories:
    - $HOME/.conan/data

before_script:
  - mkdir -p build #build dir
  - conan user #conan setup
  - conan profile new --detect clang9
  - conan profile update settings.compiler=clang clang9
  - conan profile update settings.compiler.version=9 clang9
  - conan profile update settings.compiler.libcxx=libstdc++11 clang9 # use "new" C++ ABI
  - conan profile update env.CXX=/usr/bin/clang++-9 clang9
  - conan profile update env.CC=/usr/bin/clang-9 clang9
  - conan profile new --detect gcc9
  - conan profile update settings.compiler=gcc gcc9
  - conan profile update settings.compiler.version=9 gcc9
  - conan profile update settings.compiler.libcxx=libstdc++11 gcc9 # use "new" C++ ABI
  - conan profile update env.CXX=/usr/bin/g++-9 gcc9
  - conan profile update env.CC=/usr/bin/gcc-9 gcc9
  - conan remote add tsl https://api.bintray.com/conan/tessil/tsl && conan remote add public-conan https://api.bintray.com/conan/bincrafters/public-conan && conan remote add stiffstream https://api.bintray.com/conan/stiffstream/public && conan remote add dice-group https://api.bintray.com/conan/dice-group/tentris

script:
  - cd build
  - conan install .. --build=missing -p clang9
  - export CXX="g++-9"; export CC="gcc-9"; cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release ..
  - make -j $(nproc) antlr4_sparql
  - rm CMakeCache.txt
  - export CXX="clang++-9"; export CC="clang-9"; cmake -DCMAKE_BUILD_TYPE=Release .. ; make tentris_server tentris_terminal

before_deploy:
  - make rdf2ids ids2hypertrie
  - zip benchmarktools_${TRAVIS_TAG}_clang9_libstdcxx9.zip rdf2ids ids2hypertrie
  - zip tentris_${TRAVIS_TAG}_clang9_libstdcxx9.zip make tentris_server tentris_terminal

deploy:
  provider: releases
  file:
    - "benchmarktools_${TRAVIS_TAG}_clang9_libstdcxx9.zip"
    - "tentris_${TRAVIS_TAG}_clang9_libstdcxx9.zip"
  token: $github_token
  cleanup: false
  skip_cleanup: true
  overwrite: true
  draft: true
  on:
    tags: true