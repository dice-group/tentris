os: linux
dist: bionic
language: cpp

addons:
  apt:
    packages:
      - g++-8
      - make
      - openjdk-8-jdk # required for ANTLR4
      - uuid-dev
      - libserd-dev
      - python3-pip # used for installing conan
      - python3-setuptools # required for installing conan
      - python3-wheel

install:
  - if [ "$CXX" = "g++" ]; then export CXX="g++-8" CC="gcc-8"; fi
  - pip3 install --user conan
  # first we create a directory for the CMake binaries
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  # we use wget to fetch the cmake binaries
  - travis_retry wget --no-check-certificate https://github.com/Kitware/CMake/releases/download/v3.16.4/cmake-3.16.4-Linux-x86_64.tar.gz
  # extract the binaries; the output here is quite lengthy,
  # so we swallow it to not clutter up the travis console
  - tar -xvf cmake-3.16.4-Linux-x86_64.tar.gz > /dev/null
  - mv cmake-3.16.4-Linux-x86_64 cmake-install
  # add both the top-level directory and the bin directory from the archive
  # to the system PATH. By adding it to the front of the path we hide the
  # preinstalled CMake with our own.
  - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
  # don't forget to switch back to the main build directory once you are done
  - cd ${TRAVIS_BUILD_DIR}
  - cmake --version
  - conan --version

cache:
  directories:
    - $HOME/.conan/data

before_script:
  - mkdir -p build #build dir
  - conan user #conan setup
  - conan profile new --detect default
  - conan profile update settings.compiler.libcxx=libstdc++11 default # use "new" C++ ABI
  - conan remote add tsl https://api.bintray.com/conan/tessil/tsl && conan remote add public-conan https://api.bintray.com/conan/bincrafters/public-conan && conan remote add stiffstream https://api.bintray.com/conan/stiffstream/public && conan remote add dice-research https://api.bintray.com/conan/dice-group/tentris

script:
  - cd build && conan install .. --build=missing && cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release .. && make tentris_server tentris_terminal
